<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ruoyi.student.mapper.StudentInfoMapper">
    
    <resultMap type="StudentInfo" id="StudentInfoResult">
        <result property="id"    column="id"    />
        <result property="studentId"    column="student_id"    />
        <result property="studentName"    column="student_name"    />
        <result property="studentGender"    column="student_gender"    />
        <result property="classesId"    column="classes_id"    />
        <result property="learningId"    column="learning_id"    />
        <result property="learningPassword"    column="learning_password"    />
        <result property="studentScore"    column="student_score"    />
    </resultMap>

    <sql id="selectStudentInfoVo">
        select id, student_id, student_name, student_gender, classes_id, learning_id, learning_password, student_score from student_info
    </sql>

    <select id="selectStudentInfoList" parameterType="StudentInfo" resultMap="StudentInfoResult">
        <include refid="selectStudentInfoVo"/>
        <where>  
            <if test="studentId != null  and studentId != ''"> and student_id = #{studentId}</if>
            <if test="studentName != null  and studentName != ''"> and student_name like concat('%', #{studentName}, '%')</if>
            <if test="studentGender != null  and studentGender != ''"> and student_gender = #{studentGender}</if>
            <if test="classesId != null  and classesId != ''"> and classes_id = #{classesId}</if>
            <if test="studentScore != null "> and student_score = #{studentScore}</if>
        </where>
    </select>
    
    <select id="selectStudentInfoById" parameterType="Integer" resultMap="StudentInfoResult">
        <include refid="selectStudentInfoVo"/>
        where id = #{id}
    </select>
        
    <insert id="insertStudentInfo" parameterType="StudentInfo" useGeneratedKeys="true" keyProperty="id">
        insert into student_info
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="studentId != null and studentId != ''">student_id,</if>
            <if test="studentName != null">student_name,</if>
            <if test="studentGender != null">student_gender,</if>
            <if test="classesId != null and classesId != ''">classes_id,</if>
            <if test="learningId != null">learning_id,</if>
            <if test="learningPassword != null">learning_password,</if>
            <if test="studentScore != null">student_score,</if>
         </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="studentId != null and studentId != ''">#{studentId},</if>
            <if test="studentName != null">#{studentName},</if>
            <if test="studentGender != null">#{studentGender},</if>
            <if test="classesId != null and classesId != ''">#{classesId},</if>
            <if test="learningId != null">#{learningId},</if>
            <if test="learningPassword != null">#{learningPassword},</if>
            <if test="studentScore != null">#{studentScore},</if>
         </trim>
    </insert>

    <update id="updateStudentInfo" parameterType="StudentInfo">
        update student_info
        <trim prefix="SET" suffixOverrides=",">
            <if test="studentId != null and studentId != ''">student_id = #{studentId},</if>
            <if test="studentName != null">student_name = #{studentName},</if>
            <if test="studentGender != null">student_gender = #{studentGender},</if>
            <if test="classesId != null and classesId != ''">classes_id = #{classesId},</if>
            <if test="learningId != null">learning_id = #{learningId},</if>
            <if test="learningPassword != null">learning_password = #{learningPassword},</if>
            <if test="studentScore != null">student_score = #{studentScore},</if>
        </trim>
        where id = #{id}
    </update>

    <delete id="deleteStudentInfoById" parameterType="Integer">
        delete from student_info where id = #{id}
    </delete>

    <delete id="deleteStudentInfoByIds" parameterType="String">
        delete from student_info where id in 
        <foreach item="id" collection="array" open="(" separator="," close=")">
            #{id}
        </foreach>
    </delete>
</mapper>